generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
}

model Server {
  id              Int             @id @db.UnsignedInt @default(autoincrement())
  serverId        Int             @db.UnsignedInt

  adminRole       AdminRole[]
  sendChannel     SendChannel[]
  receiveChannel  ReceiveChannel[]
}

model AdminRole {
  id            Int             @id @db.UnsignedInt @default(autoincrement())
  serverId      Int             @db.UnsignedInt
  roleId        Int             @db.UnsignedInt

  server        Server          @relation(fields: [serverId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model SendChannel {
  id              Int             @id @db.UnsignedInt @default(autoincrement())
  serverId        Int             @db.UnsignedInt
  channelId       Int             @db.UnsignedInt
  
  receiveChannels SendToReceive[]

  server          Server          @relation(fields: [serverId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model ReceiveChannel {
  id            Int             @id @db.UnsignedInt @default(autoincrement())
  serverId      Int             @db.UnsignedInt
  channelId     Int             @db.UnsignedInt

  sendChannels  SendToReceive[]

  server        Server          @relation(fields: [serverId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model SendToReceive {
  sendChannelId       Int             @db.UnsignedInt
  receiveChannelId    Int             @db.UnsignedInt

  sendChannel         SendChannel     @relation(fields: [sendChannelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  receiveChannel      ReceiveChannel  @relation(fields: [receiveChannelId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([sendChannelId, receiveChannelId])
}